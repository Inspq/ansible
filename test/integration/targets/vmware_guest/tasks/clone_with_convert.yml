# Test code for the vmware_guest module.
# Copyright: (c) 2018, Christophe FERREIRA <christophe.ferreira@cnaf.fr>
# GNU General Public License v3.0+ (see COPYING or https://www.gnu.org/licenses/gpl-3.0.txt)

- name: clone vm from template and convert to thin
  vmware_guest:
    validate_certs: False
    hostname: "{{ vcenter_hostname }}"
    username: "{{ vcenter_username }}"
    password: "{{ vcenter_password }}"
    name: "{{ 'thin_' + item.name }}"
    template: "{{ item.name }}"
    datacenter: "{{ dc1 }}"
    state: poweredoff
    folder: "{{ item.folder }}"
    convert: thin
  with_items: "{{ virtual_machines }}"
  register: clone_thin

- debug: var=clone_thin

- name: assert that changes were made
  assert:
    that:
        - "clone_thin.results|map(attribute='changed')|unique|list == [true]"

- name: clone vm from template and convert to thick
  vmware_guest:
    validate_certs: False
    hostname: "{{ vcenter_hostname }}"
    username: "{{ vcenter_username }}"
    password: "{{ vcenter_password }}"
    name: "{{ 'thick_' + item.name }}"
    template: "{{ item.name }}"
    datacenter: "{{ dc1 }}"
    state: poweredoff
    folder: "{{ item.folder }}"
    convert: thick
  with_items: "{{ virtual_machines }}"
  register: clone_thick

- debug: var=clone_thick

- name: assert that changes were made
  assert:
    that:
        - "clone_thick.results|map(attribute='changed')|unique|list == [true]"

- name: clone vm from template and convert to eagerzeroedthick
  vmware_guest:
    validate_certs: False
    hostname: "{{ vcenter_hostname }}"
    username: "{{ vcenter_username }}"
    password: "{{ vcenter_password }}"
    name: "{{ 'eagerzeroedthick_' + item.name }}"
    template: "{{ item.name }}"
    datacenter: "{{ dc1 }}"
    state: poweredoff
    folder: "{{ item.folder }}"
    convert: eagerzeroedthick
  with_items: "{{ virtual_machines }}"
  register: clone_eagerzeroedthick

- debug: var=clone_eagerzeroedthick

- name: assert that changes were made
  assert:
    that:
        - "clone_eagerzeroedthick.results|map(attribute='changed')|unique|list == [true]"
