# Test code for the vmware_guest module.
# Copyright: (c) 2019, Abhijeet Kasurde <akasurde@redhat.com>
# GNU General Public License v3.0+ (see COPYING or https://www.gnu.org/licenses/gpl-3.0.txt)

- name: Wait for Flask controller to come up online
  wait_for:
    host: "{{ vcsim }}"
    port: 5000
    state: started

- name: kill vcsim
  uri:
    url: http://{{ vcsim }}:5000/killall

- name: start vcsim with no folders
  uri:
    url: http://{{ vcsim }}:5000/spawn?datacenter=1&cluster=2&pool=2&folder=0
  register: vcsim_instance

- name: Wait for Flask controller to come up online
  wait_for:
    host: "{{ vcsim }}"
    port: 443
    state: started

- name: get a list of VMS from vcsim
  uri:
    url: http://{{ vcsim }}:5000/govc_find?filter=VM
  register: vmlist

- &add_mk_conn
  name: Create new VMs again with max_connections as 4
  vmware_guest:
    validate_certs: False
    hostname: "{{ vcsim }}"
    username: "{{ vcsim_instance['json']['username'] }}"
    password: "{{ vcsim_instance['json']['password'] }}"
    name: "{{ 'newvm_mk_conn_' + item|basename }}"
    guest_id: centos64Guest
    datacenter: "{{ (item|basename).split('_')[0] }}"
    hardware:
      num_cpus: 4
      memory_mb: 512
      max_connections: 4
    disk:
      - size: 1gb
        type: thin
        autoselect_datastore: True
    state: present
    folder: "{{ item|dirname }}"
  with_items: "{{ vmlist['json'][0] }}"
  register: mk_conn_result_0001

- debug: var=mk_conn_result_0001

- name: Assert that changes were made
  assert:
    that:
      - "mk_conn_result_0001.results|map(attribute='changed')|unique|list == [true]"

- <<: *add_mk_conn
  name: Again create new VMs again with max_connections as 4
  register: mk_conn_result_0002

- debug: var=mk_conn_result_0002

- name: Assert that changes were not made
  assert:
    that:
      - "mk_conn_result_0002.results|map(attribute='changed')|unique|list == [false]"
